CC = cl

OUT = out
SRC = src
EXE = civ-game.exe

HEADERS = $(wilcard *.h) $(wildcard $(SRC)\*.h)
SOURCES = $(wilcard *.c) $(wildcard $(SRC)/*.c)

OBJS = $(patsubst $(SRC)/%.c, $(OUT)/%.obj, $(SOURCES))

SCRIPTS_DIR = scripts
SCRIPTS_SRC := $(wildcard $(SCRIPTS_DIR)/*)
SCRIPTS := $(patsubst $(SCRIPTS_DIR)/%.c, $(OUT)/%, $(SCRIPTS_SRC))

SHADERS = shaders
VERT := $(patsubst %.vert, $(OUT)/%_vert.h, $(wildcard $(SHADERS)/*.vert))
FRAG := $(patsubst %.frag, $(OUT)/%_frag.h, $(wildcard $(SHADERS)/*.frag))
COMP := $(patsubst %.comp, $(OUT)/%_comp.h, $(wildcard $(SHADERS)/*.comp))

HEXEMBED := .\$(OUT)\hexembed.exe

SDL_INCLUDE_DIR  = .\external\SDL\include
VOLK_INCLUDE_DIR = .\external\volk
VMA_INCLUDE_DIR = .\external\VulkanMemoryAllocator\include
CGLM_INCLUDE_DIR = .\external\cglm\include

VULKAN_INCLUDE_DIR := $(VULKAN_SDK)\Include
VULKAN_LIB_DIR := $(VULKAN_SDK)\Lib

INCLUDE_FLAGS := /I $(SDL_INCLUDE_DIR) /I $(VOLK_INCLUDE_DIR) /I $(VULKAN_INCLUDE_DIR) /I $(VMA_INCLUDE_DIR) /I $(CGLM_INCLUDE_DIR) /I .\$(OUT)\$(SHADERS)
LIB_FLAGS := /link /LIBPATH:"$(OUT)" SDL3.lib /LIBPATH:"$(VULKAN_LIB_DIR)" vulkan-1.lib

CFLAGS = /W4 /O1

.PHONY: all deps build run clean scripts shaders

all: run

libs: sdl vma
sdl:
	cmake -S external/SDL -B $(OUT)/SDL && cmake --build $(OUT)/SDL --config Release
	@powershell -Command "cp $(OUT)/SDL/Release/* $(OUT)/"

vma: $(OUT)/vma.obj
$(OUT)/vma.obj: external/VulkanMemoryAllocator/src/VmaUsage.cpp 
	$(CC) $(INCLUDE_FLAGS) /DVMA_STATIC_VULKAN_FUNCTIONS=0 /DVMA_DYANMIC_VULKAN_FUNCTIONS=0 /c $< /Fo"$@"

scripts: $(SCRIPTS)
$(OUT)/%: $(SCRIPTS_DIR)/%.c
	@if not exist $(@D) md $(@D)
	@echo "Compiling processing script $< ...."
	@$(CC) /Fe"$@" $<

shaders: $(VERT) $(FRAG) $(COMP)
$(OUT)/$(SHADERS)/%_vert.h: $(SHADERS)/%.vert
	if not exist "$(@D)" md "$(@D)"
	@echo "Generating embeddable C file for $< ...."
	glslc $< -o $(OUT)/$(SHADERS)/$*_vert.spv && $(HEXEMBED) $(OUT)/$(SHADERS)/$*_vert.spv $*_vert > $@

$(OUT)/$(SHADERS)/%_frag.h: $(SHADERS)/%.frag
	@echo "Generating embeddable C file for $< ...."
	glslc $< -o $(OUT)/$(SHADERS)/$*_frag.spv && $(HEXEMBED) $(OUT)/$(SHADERS)/$*_frag.spv $*_frag > $@

$(OUT)/$(SHADERS)/%_comp.h: $(SHADERS)/%.comp
	@echo "Generating embeddable C file for $< ...."
	glslc $< -o $(OUT)/$(SHADERS)/$*_comp.spv && $(HEXEMBED) $(OUT)/$(SHADERS)/$*_comp.spv $*_comp > $@

deps: scripts shaders libs

run: build
	cd $(OUT) && .\$(EXE)

build: deps $(OUT)/$(EXE)

clean:
	@powershell -Command "rm -r -fo $(OUT)"

$(OUT)/$(EXE): $(OBJS) $(OUT)/vma.obj
	$(CC) $(OBJS) $(OUT)/vma.obj /Fe"$(OUT)/$(EXE)" $(LIB_FLAGS)

$(OUT)/%.obj: $(SRC)/%.c $(HEADERS)
	if not exist $(OUT) md $(OUT)
	$(CC) /c $< /Fo"$@" $(INCLUDE_FLAGS) $(CFLAGS)

