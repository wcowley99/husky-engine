cmake_minimum_required(VERSION 3.20)

project(
  Husky
  VERSION 0.0.1
  LANGUAGES CXX
)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

find_package(Vulkan REQUIRED)
find_package(Python)

add_subdirectory(external)

set(
  RENDER_SOURCES
  "render/allocator.cpp"
  "render/allocator.h"
  "render/canvas.h"
  "render/command_builder.h"
  "render/command_builder.cpp"
  "render/compute_pipeline.cpp"
  "render/compute_pipeline.h"
  "render/descriptors.cpp"
  "render/descriptors.h"
  "render/engine.cpp"
  "render/engine.h"
  "render/frames.cpp"
  "render/frames.h"
  "render/graphics_pipeline.cpp"
  "render/graphics_pipeline.h"
  "render/image.cpp"
  "render/image.h"
  "render/imconfig.h"
  "render/swapchain.cpp"
  "render/swapchain.h"
  "render/vk_base.h"
  "render/vk_base.cpp"
  "render/window.h"
  "render/window.cpp"
)

add_custom_command(
  OUTPUT __shader_sources_autogenerated.h __shader_sources_autogenerated.cpp
  COMMAND python 
  ARGS ${CMAKE_SOURCE_DIR}/embed_shaders.py ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_SOURCE_DIR}
  DEPENDS embed_shaders.py
)

set(
  GENERATED_FILES
  "${CMAKE_CURRENT_BINARY_DIR}/__shader_sources_autogenerated.cpp"
  "${CMAKE_CURRENT_BINARY_DIR}/__shader_sources_autogenerated.h"
)

add_executable(${PROJECT_NAME} 
  main.cpp
  ${RENDER_SOURCES}
  ${GENERATED_FILES}
  ${IMGUI_SOURCES}
)

target_link_libraries(${PROJECT_NAME} PRIVATE 
  SDL3::SDL3
  Vulkan::Headers
  GPUOpen::VulkanMemoryAllocator
  glm::glm
)

target_include_directories(${PROJECT_NAME} PRIVATE 
  ${SDL3_SOURCE_DIR}/include
  ${VMA_SOURCE_DIR}/include
  ${GLM_SOURCE_DIR}
  ${IMGUI_SOURCE_DIR}
  ${IMGUI_SOURCE_DIR}/backends
  ${CMAKE_CURRENT_BINARY_DIR}
)

add_compile_definitions(IMGUI_IMPL_VULKAN_NO_PROTOTYPES)
